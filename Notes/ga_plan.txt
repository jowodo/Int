should have:
	input file
	on the go 
	output file 

input file 

int and float? 
how is the mating if 4 and 5 

termination condition can be set to 0 


have an file 
number of parameters
min max for each individual? 
program reads file and prompts which fittness levels are needed

gene encoding: 
either 0-2^x
and according gene represents a number between real min and max 
could be represented in binary and mutation is switch


programm is interactive? (could also be reading input file
no generations.ga file found. start a new generation?
number of parameters: 
min max (for all)
	or 
name of parameter min max
do you want to define a initial generation? 
if (input == yes)
	do you want to input fittnes? 
	or fitness as optional input
	input parameters
else
	output initial generation into file and stdout
prompt something like: please get fitness and return when obtained

if file found then
read file and find out how many and which parameters min max 
and if the fitness level is given. Ask for all fitnesses which are 
not given. if fitness was in a previous generation, fetch fitness 
from there and dont prompt.
Write new fitnesses. If all fitnesses are given proceed with algo, 
else else prompt which fitnesses are still missing.
problem genotype and phenotype. If genotype is the same phenotype 
doesn't have to be the same. >>> Ask at beginning or each step if 
new phenotype, i.e. fitness should be added.



2021-02-07
optimization vDOC*Tvel/(conc*nlay*Tcal*TDOC) should be maximum
