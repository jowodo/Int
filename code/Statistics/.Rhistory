n="numeric"
f="factor"
d<-read.delim("db_final.tsv", colClasses=c(n,n,n,n,n,n,f,f,f,f,f,f))
head(d)
aov(G ~ TCal, data=d)
G.Tcal.aov<-aov(G ~ TCal, data = d) 
G.TCal.aov<-aov(G ~ TCal, data = d) 
summary(G.TCal.aov)
summary(d)
summary(G.TCal.aov)
summary(d)
summary(aov(phd ~ TCal, data=d))
1.2363/0.1068 
43.62/14/540 
43.62/14.540 
4*14>540 
4*14.540 
3*14.540 
158.47/4.4.02 
158.47/4.402 
158.47/36 
43.62/3 
14.54/4.402 
help(runif)
boxplot(G ~ TCal, data=d, main="Conductance by Calc. Temp", xlab="Calc Temp. [C]", ylab="Conductance [log(S)]", col="steelblue", border="black")
G.TCal.aov
library("emma")
emmat0
in.name <-  c("conc",   "layr", "vDOC", "TDOC", "vCal", "TCal")
nlev <-     c(4,        5,      6,      5,      5,      3)
lower <-    c(2,        4,      10,     40,     120,    300)
upper <-    c(5,        12,     20,     80,     1080,   500)
out.name <- c("conductivity","pinhole density","layers","Cal_vel")
weight <- c(0.4,0.5,0.05,0.05)
opt <- c("mn","mn","mn","mx")
### ### ### ###
nd <- 10# initial experiments
na <- 5     # exps per time step
graph="yes"
C<-10       # total number of timesteps
pr.mut <- c(0.1, 0.07, 0.04, rep(0.01, C-3))
t0<-function(){
    t0 <- emmat0(in.name, nlev, lower, upper, out.name, nd)
    return(t0)
}
t0 
t0()
t0()
set.seed(0)
t0()
t0()
set.seed(0)
t0()
t0()
set.seed(0)
t0()
t0()
set.seed(0)
t0()
y
summary(d)
library("emma")
d
dat
library("dplyr") 
library("dplyr") 
dat<-read.delim("./db_final.tsv") 
summary(dat) 
plot(dat$G ~ dat$TCal) 
plot(dat$phd ~ dat$TCal) 
d
dat
library(earth) 
help(earth) 
library("emma") 
help(emmacheck) 
show 
show(emmacheck)
help(estimateModel)
??estimateModel
help(emmacheck) 
show(emmacheck)
load("../EMMA/t5") 
source("../EMMA/inter.R") 
show(emmacheck)
emma::estimateModel()
show(emmacheck)
show(estimateModel)
x
x<-t5
head<-t5
fmla <- as.formula(paste(paste("data.matrix(input[,",ncol(x$xpop)+1,":",ncol(x$xpop)+ncol(x$ypop),"])"),"~", paste(colnames(x$xpop),collapse= "+")))

head<-t4
fmla <- as.formula(paste(paste("data.matrix(input[,",ncol(x$xpop)+1,":",ncol(x$xpop)+ncol(x$ypop),"])"),"~", paste(colnames(x$xpop),collapse= "+")))

ncol(x$xpop)
data.matrix(input[,ncol(x$pop)+1 : ncol(x$xpop)+ncol(x$ypop) ] ) 
input <- cbind(x$xpop,x$ypop)
x<-t5
input <- cbind(x$xpop,x$ypop)
x<-t4
input <- cbind(x$xpop,x$ypop)
fmla <- as.formula(paste(paste("data.matrix(input[,",ncol(x$xpop)+1,":",ncol(x$xpop)+ncol(x$ypop),"])"),"~", paste(colnames(x$xpop),collapse= "+")))

fmla 
mars.mod <- earth(fmla,degree=2,trace=0,minspan=1,data=input,keepxy=TRUE)

mars.mod
format mars.mod
format(mars.mod)
head(x$ypop)
head(x$ypop,1)
head(x$ypop,0)
help(formula) 
